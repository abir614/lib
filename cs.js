const socket=io({reconnection:!0,reconnectionAttempts:1/0,reconnectionDelay:1e3,reconnectionDelayMax:5e3});let autoScrollEnabled=!0,isLoadingMoreMessages=!1,SECRET_KEY="xSAjwEE70Ilu4EN6iM1yTB-9A6ut4OfWDVmlZi82Q_w=",currentUser=null,currentRoomId=null,isJoined=!1,userColors={},roomUsers=[],lastMessageId=null,displayedUsernames=new Set;const USER_COLORS=["#28a745","#dc3545","#ffc107","#6f42c1","#fd7e14","#20c997","#e83e8c","#6c757d","#17a2b8"];function setSecretKey(e){SECRET_KEY=e}function encryptMessage(e){let t=CryptoJS.lib.WordArray.random(16),n=CryptoJS.AES.encrypt(e,CryptoJS.enc.Base64.parse(SECRET_KEY),{iv:t});return t.toString()+":"+n.toString()}function decryptMessage(e){let t=e.split(":");if(2!==t.length)return console.error("Invalid ciphertext format"),null;let n=CryptoJS.enc.Hex.parse(t[0]),s=t[1];return CryptoJS.AES.decrypt(s,CryptoJS.enc.Base64.parse(SECRET_KEY),{iv:n}).toString(CryptoJS.enc.Utf8)||(console.warn("Decryption failed for message:",e),null)}function validateInputs(){let e=document.getElementById("username").value.trim(),t=document.getElementById("roomId").value.trim(),n=/^[a-zA-Z0-9]{4,20}$/.test(e),s=/^\d{1,5}$/.test(t);return document.getElementById("username").style.backgroundColor=n?"lightgreen":"lightcoral",document.getElementById("roomId").style.backgroundColor=s?"lightgreen":"lightcoral",n&&s}function scrollToBottom(){let e=document.getElementById("messages");e.scrollTop=e.scrollHeight}function assignUserColor(e){if(!userColors[e]){let t=Object.keys(userColors).length%USER_COLORS.length;userColors[e]=USER_COLORS[t]}return userColors[e]}function createMessageElement(e,t,n,s,o,r){let l=document.createElement("div");l.className=n?"message user":"message receiver",r&&(l.dataset.messageId=r,lastMessageId=r);let a=document.createElement("div");if(a.className="message-content",roomUsers.length>2&&(n?l.style.backgroundColor="#007bff":l.style.backgroundColor=assignUserColor(e),!displayedUsernames.has(e)||n)){let i=document.createElement("span");i.className="message-username",i.style.cssText="font-weight:bold;font-size:11px;opacity:1;margin-bottom:4px;display:block;font-family:Poppins,sans-serif;color:#fff;text-shadow:1px 1px 2px rgba(0,0,0,0.5)",i.textContent=e,a.appendChild(i),displayedUsernames.add(e),setTimeout(()=>displayedUsernames.delete(e),1e4)}if(o){let c=document.createElement("img");c.src=o,c.alt="User uploaded image",c.style.maxWidth="200px",c.style.borderRadius="8px",a.appendChild(c)}else{let d=document.createElement("div"),m=decryptMessage(t);d.textContent=m||"[Message could not be decrypted]",a.appendChild(d)}if(s){let g=document.createElement("span");g.className="message-time",g.style.cssText="font-size:9px;color:#b8b8b8;margin-top:3px;display:block;opacity:1;text-align:"+(n?"right":"left")+";font-family:Poppins,sans-serif;font-weight:500;text-shadow:1px 1px 2px rgba(0,0,0,0.7)";let u=new Date(s),p=new Date,y=u.toDateString()===p.toDateString()?u.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}):u.toLocaleDateString()+" "+u.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});g.textContent=y,a.appendChild(g)}return l.appendChild(a),s&&(l.dataset.timestamp=s),l}function showSeenStatus(e,t){let n=document.querySelector(`[data-message-id="${e}"]`);if(!n)return;document.querySelectorAll(".seen-indicator").forEach(e=>e.remove());let s=t.filter(e=>e!==currentUser);if(s.length>0&&n.classList.contains("user")&&e===lastMessageId){let o=document.createElement("div");o.className="seen-indicator",o.style.cssText="font-size:10px;color:#007bff;text-align:right;margin:2px 10px 5px 0;font-style:italic;font-family:Poppins,sans-serif;opacity:1;font-weight:500;text-shadow:1px 1px 2px rgba(0,0,0,0.7)";let r=[...new Set(s)];o.textContent=1===r.length?`✓ Seen by ${r[0]}`:`✓ Seen by ${r.join(", ")}`,n.parentNode.insertBefore(o,n.nextSibling)}}function markMessagesAsSeen(){isJoined&&currentRoomId&&lastMessageId&&socket.emit("markAllSeen",{roomId:currentRoomId})}document.getElementById("join").addEventListener("click",()=>{if(validateInputs()){let e=document.getElementById("username").value.trim(),t=document.getElementById("roomId").value.trim();currentUser=e,currentRoomId=t,socket.emit("joinRoom",{username:e,roomId:t}),document.getElementById("join").disabled=!0,document.getElementById("join").textContent="Joining..."}else alert("Login failed: Please enter valid username and room ID.")}),socket.on("joinConfirmed",({username:e,roomId:t,users:n})=>{isJoined=!0,roomUsers=n||[],userColors={},displayedUsernames.clear(),document.getElementById("login-form").style.display="none",document.getElementById("chat-container").style.display="flex",document.getElementById("status").textContent=`In Room: ${t}`,setTimeout(markMessagesAsSeen,1e3)}),socket.on("joinError",e=>{alert("Failed to join room: "+e),document.getElementById("join").disabled=!1,document.getElementById("join").textContent="Join"}),socket.on("previousMessages",e=>{let t=document.getElementById("messages");t.innerHTML="",displayedUsernames.clear(),e.forEach(({username:e,message:n,timestamp:s,imageUrl:o,messageId:r})=>{t.appendChild(createMessageElement(e,n,e===currentUser,s,o,r))}),scrollToBottom()}),socket.on("chatMessage",({user:e,message:t,imageUrl:n,messageId:s,timestamp:o})=>{let r=n?createMessageElement(e,null,e===currentUser,o,n,s):createMessageElement(e,t,e===currentUser,o,null,s);document.getElementById("messages").appendChild(r),autoScrollEnabled&&scrollToBottom(),e!==currentUser&&setTimeout(markMessagesAsSeen,500)}),socket.on("messageSeen",({messageId:e,seenBy:t})=>showSeenStatus(e,t)),socket.on("updateActiveUsers",e=>{let t=(roomUsers=[...new Set(e.map(e=>e.username))]).filter(e=>e!==currentUser).join(", ");document.getElementById("active-users").innerHTML="Active Users: "+(t||"None")}),socket.on("connect",()=>{console.log("Connected"),currentUser&&currentRoomId&&!isJoined&&(console.log("Rejoining room after reconnect..."),socket.emit("joinRoom",{username:currentUser,roomId:currentRoomId}))}),socket.on("disconnect",e=>{console.warn("Disconnected:",e),document.getElementById("status").textContent="Reconnecting..."}),socket.io.on("reconnect",e=>{console.log(`Reconnected after ${e} attempts`),currentUser&&currentRoomId&&socket.emit("joinRoom",{username:currentUser,roomId:currentRoomId})}),socket.io.on("reconnect_failed",()=>{console.error("Reconnection failed"),document.getElementById("status").textContent="Connection Lost"});
